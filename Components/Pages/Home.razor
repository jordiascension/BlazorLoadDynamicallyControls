@page "/"
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using BaseInterfaces
@using LabelControl

@inject IControlContract controlContract

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<p> The TextBox control loaded with reflection is called: @GetControlName()</p>

@if (customInputFragment != null)
{
    @customInputFragment
}
else
{
    <p>Loading...</p>
}


@code {
    private int currentCount = 0;
    private RenderFragment customInputFragment;
    private List<dynamic> formelemlist = new List<dynamic>();

    RenderFragment GetControlName()
    {
        return @<em>@controlContract?.GetControlName()</em>;
    }

    protected override async Task OnInitializedAsync()
    {
        // Await the asynchronous call to get the RenderFragment
        LabelControlImpl labelControlImpl = new LabelControlImpl();
        customInputFragment = await labelControlImpl.CreateControls();
    }
}

